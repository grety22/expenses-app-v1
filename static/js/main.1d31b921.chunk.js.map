{"version":3,"sources":["components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","firebase-config.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","props","className","onChange","event","onChangeFilter","target","value","selected","ExpenseDate","timestamp","date","seconds","Date","month","toLocaleString","day","year","getFullYear","Card","classes","children","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","ExpenseItem","title","amount","onClick","console","log","icon","faTrash","ExpensesList","items","length","map","item","id","ChartBar","barFillHeight","maxValue","Math","round","style","borderColor","parseFloat","substring","height","backgroundColor","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","expensesCollectionRef","collection","submitHandler","a","preventDefault","expenseData","addDoc","onSaveExpenseData","onSubmit","type","min","step","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","App","setExpenses","useEffect","getExpenses","getDocs","data","docs","doc","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d31b921.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ExpensesFilter.css';\r\n\r\nexport default function ExpensesFilter (props){\r\n  \r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select onChange={dropdownChangeHandler} value={props.selected}>\r\n          {/* Create this list dinamically from react  */}\r\n          <option value='2023'>2023</option>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import './ExpenseDate.css';\r\n\r\nexport default function ExpenseDate(props) {\r\n\r\n    var timestamp = props.date.seconds;\r\n    var date = new Date(timestamp*1000);\r\n\r\n    const month = date.toLocaleString('en-US', {month: 'long'}),\r\n            day = date.toLocaleString('en-US', {day: '2-digit'}),\r\n           year = date.getFullYear();\r\n\r\n    return (\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nexport default function Card(props) {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}","import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"@firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FBASE_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Access DB \r\nexport const db = getFirestore(app);","import React from 'react';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\n// firebase \r\nimport { db } from '../../firebase-config';\r\nimport { doc, deleteDoc } from 'firebase/firestore';\r\n\r\nexport default function ExpenseItem(props) {\r\n    const deleteExpense = async (id) => {\r\n        const expenseDoc = doc(db, \"expenses\", id);\r\n        await deleteDoc(expenseDoc);\r\n    }  \r\n    return (\r\n        <li>\r\n            <Card className=\"expense-item\">\r\n                <ExpenseDate date={props.date}/>\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{props.title}</h2>\r\n                    <div className=\"expense-item__price\">${props.amount}</div>\r\n                </div>\r\n                <div className=\"expense-item__icons\">\r\n                    <FontAwesomeIcon onClick={() => {console.log(props.amount)}} icon={faTrash} className=\"fa-lg\"></FontAwesomeIcon>\r\n                    {/* <FontAwesomeIcon icon={faPen} className=\"fa-lg\"></FontAwesomeIcon> */}\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    )\r\n}","import React from 'react'\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nexport default function ExpensesList(props) {\r\n\r\n    if (props.items.length === 0){\r\n        return <h2 className='expenses-list__fallback'>Found no expenses</h2>\r\n    }\r\n\r\n    return (\r\n        <ul className='expenses-list'>\r\n            {props.items.map((item) => (\r\n                <ExpenseItem title={item.title} amount={item.amount} date={item.date} key={item.id}/>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './ChartBar.css';\r\n\r\nexport default function ChartBar(props) {\r\n    let barFillHeight = \"0%\";\r\n    if (props.maxValue > 0) {\r\n        let barFillNumber = Math.round((props.value / props.maxValue) * 100);\r\n        barFillHeight = barFillNumber + '%';\r\n    }\r\n\r\n    return (\r\n        <div className='chart-bar'>\r\n            <div className='chart-bar__inner' style={{\r\n                    borderColor: (parseFloat(props.value.substring(1)) > 1000) ? '#E41F7B80' : '#0EF6BE',\r\n                }}>\r\n                <div className='chart-bar__fill' style={{\r\n                    height: barFillHeight, \r\n                    backgroundColor: (parseFloat(props.value.substring(1)) > 1000) ? '#E41F7B' : '#0EF6BE',\r\n                }}></div>\r\n            </div>\r\n            <div className='chart-bar__label'>{ props.label }</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './Chart.css';\r\nimport ChartBar from './ChartBar';\r\n\r\nexport default function Chart(props) {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n    return (\r\n        <div className='chart'>\r\n            {\r\n                props.dataPoints.map(dataPoint => \r\n                    <ChartBar \r\n                        value={dataPoint.value} \r\n                        maxValue={totalMaximum} \r\n                        label={dataPoint.label} \r\n                        key={dataPoint.label}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value:'0'},\r\n        {label: 'Feb', value:'0'},\r\n        {label: 'Mar', value:'0'},\r\n        {label: 'Apr', value:'0'},\r\n        {label: 'May', value:'0'},\r\n        {label: 'Jun', value:'0'},\r\n        {label: 'Jul', value:'0'},\r\n        {label: 'Aug', value:'0'},\r\n        {label: 'Sep', value:'0'},\r\n        {label: 'Oct', value:'0'},\r\n        {label: 'Nov', value:'0'},\r\n        {label: 'Dec', value:'0'},\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        var timestamp = expense.date.seconds;\r\n        var date = new Date(timestamp*1000);\r\n        const expenseMonth = date.getMonth(); //starting from 0 => month = January\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints} />\r\n}\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from 'react';\r\n\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nimport Card from '../UI/Card';\r\nimport './Expenses.css';\r\n\r\nexport default function Expenses(props) {\r\n    const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n    const items = props.items;\r\n\r\n    const filteredExpenses = items.filter(expense => {\r\n        var timestamp = expense.date.seconds;\r\n        var date = new Date(timestamp*1000);\r\n        // console.log(date.getFullYear());\r\n        return date.getFullYear().toString() === filteredYear;\r\n    });\r\n\r\n    const filterChangeHandler = (selectedYear) => {\r\n        setFilteredYear(selectedYear);\r\n    }; \r\n\r\n    return (\r\n        <Card className=\"expenses\">\r\n            <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n            <ExpensesChart expenses={filteredExpenses} />\r\n            <ExpensesList items={filteredExpenses} />\r\n            {/* {filteredExpenses.length === 0 ? <p className='no-expenses-found'>No expenses found</p> : allExpenses} */}\r\n            {/* another useful way : */}\r\n            {/* {filteredExpenses.length === 0 && <p className='no-expenses-found'>No expenses found</p>}\r\n            {filteredExpenses.length > 0 && allExpenses} */}\r\n        </Card>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\nimport { db } from '../../firebase-config';\r\nimport { collection, addDoc, updateDoc, doc } from 'firebase/firestore';\r\n\r\nexport default function ExpenseForm(props) {\r\n    const [enteredTitle,  setEnteredTitle]  = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate,   setEnteredDate]   = useState('');\r\n\r\n    const expensesCollectionRef = collection(db, \"expenses\");\r\n\r\n    // Use this for single-state approach:\r\n    // const [userInput, setUserInput] = useState({\r\n    //     enteredTitle: '',\r\n    //     enteredAmount: '',\r\n    //     enteredDate: ''\r\n    // });\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n        // Use this for single-state approach:\r\n        // setUserInput((prevState) => {\r\n        //     return { ...prevState, enteredTitle: event.target.value };\r\n        // });\r\n    };\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n        // Use this for single-state approach:\r\n        // setUserInput((prevState) => {\r\n        //     return { ...prevState, enteredAmount: event.target.value };\r\n        // });\r\n    };\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n        // Use this for single-state approach:\r\n        // setUserInput((prevState) => {\r\n        //     return { ...prevState, enteredDate: event.target.value };\r\n        // });\r\n    };\r\n    // Create Expense\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate),\r\n        };\r\n\r\n        await addDoc(expensesCollectionRef, expenseData);\r\n        \r\n        console.log(expenseData);\r\n        props.onSaveExpenseData(expenseData);\r\n\r\n        // empty screen after submission\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    }\r\n    // Update Expense (NOT IN USE YET)\r\n    const updateExpense = async (id, title, amount, date) => {\r\n        const expenseDoc = doc(db, \"expenses\", id);\r\n        const expenseUpdated = {\r\n            title: title,\r\n            amount: +amount,\r\n            date: new Date(date),\r\n        };\r\n        await updateDoc(expenseDoc, expenseUpdated);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input type=\"date\" min=\"2019-01-01\" max=\"2023-12-31\" value={enteredDate} onChange={dateChangeHandler}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport Card from '../UI/Card';\r\n\r\nexport default function NewExpense(props) {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            // adding an id to the new data object \r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    }\r\n\r\n    const stoptEditingHandler = () => {\r\n        setIsEditing(false);\r\n    }\r\n\r\n    return (\r\n        <Card className=\"new-expense\">\r\n            {!isEditing && <button className=\"month-max-btn\">Set Months Max</button>}\r\n            {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n            {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stoptEditingHandler} />}\r\n        </Card>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Expenses from './components/Expenses/Expenses';\r\nimport NewExpense from './components/NewExpense/NewExpense';\r\nimport { db } from './firebase-config';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\n\r\n// const dummy_data_expenses = [\r\n//   {\r\n//     id: 'e1',\r\n//     title: 'Toilet Paper',\r\n//     amount: 94.12,\r\n//     date: new Date(2020, 7, 14),\r\n//   },\r\n//   { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\r\n//   { id: 'e5', title: 'Home', amount: 25000, date: new Date(2021, 2, 10) },\r\n//   {\r\n//     id: 'e3',\r\n//     title: 'Car Insurance',\r\n//     amount: 294.67,\r\n//     date: new Date(2022, 2, 28),\r\n//   },\r\n//   {\r\n//     id: 'e4',\r\n//     title: 'New Desk (Wooden)',\r\n//     amount: 450,\r\n//     date: new Date(2022, 5, 12),\r\n//   },\r\n// ];\r\n\r\nfunction App() {\r\n  const [expenses, setExpenses] = useState([]);\r\n  const expensesCollectionRef = collection(db, \"expenses\");\r\n\r\n  useEffect(() => {\r\n    const getExpenses = async () => {\r\n      const data = await getDocs(expensesCollectionRef);\r\n      console.log(data);\r\n      setExpenses(data.docs.map((doc) => ({...doc.data(), id: doc.id})));\r\n    }\r\n    getExpenses();\r\n  }, []);\r\n  // const [expenses, setExpenses] = useState(dummy_data_expenses);\r\n\r\n  // Alternative code (old way):\r\n  // return React.createElement(\r\n  //   'div',\r\n  //   {},\r\n  //   React.createElement('h2', {}, \"Expenses App\"),\r\n  //   React.createElement(Expenses, {items: expenses})\r\n  // );\r\n\r\n  const addExpenseHandler = expense => {\r\n    setExpenses(prevExpenses => {\r\n      return [expense, ...prevExpenses];\r\n    });  \r\n  }\r\n\r\n  // JSX alternative :\r\n  return (\r\n    <div>\r\n      <h2 className='app-h2'>expen<span className='app-span'>$</span>es</h2>\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      <Expenses items={expenses} />\r\n      <span className='app-span__control-version'>v 1.2</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}