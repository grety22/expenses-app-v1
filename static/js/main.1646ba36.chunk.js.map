{"version":3,"sources":["components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","props","className","onChange","event","onChangeFilter","target","value","selected","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","item","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","console","log","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","dummy_data_expenses","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1646ba36.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ExpensesFilter.css';\r\n\r\nexport default function ExpensesFilter (props){\r\n  \r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select onChange={dropdownChangeHandler} value={props.selected}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import './ExpenseDate.css';\r\n\r\nexport default function ExpenseDate(props) {\r\n    const month = props.date.toLocaleString('en-US', {month: 'long'}),\r\n            day = props.date.toLocaleString('en-US', {day: '2-digit'}),\r\n           year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nexport default function Card(props) {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}","import React from 'react';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nexport default function ExpenseItem(props) {\r\n    return (\r\n        <li>\r\n            <Card className=\"expense-item\">\r\n                <ExpenseDate date={props.date}/>\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{props.title}</h2>\r\n                    <div className=\"expense-item__price\">${props.amount}</div>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    )\r\n}","import React from 'react'\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nexport default function ExpensesList(props) {\r\n\r\n    if (props.items.length === 0){\r\n        return <h2 className='expenses-list__fallback'>Found no expenses</h2>\r\n    }\r\n\r\n    return (\r\n        <ul className='expenses-list'>\r\n            {props.items.map((item) => (\r\n                <ExpenseItem title={item.title} amount={item.amount} date={item.date} key={item.id}/>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './ChartBar.css';\r\n\r\nexport default function ChartBar(props) {\r\n    let barFillHeight = \"0%\";\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return (\r\n        <div className='chart-bar'>\r\n            <div className='chart-bar__inner'>\r\n                <div className='chart-bar__fill' style={{ height: barFillHeight }}></div>\r\n            </div>\r\n            <div className='chart-bar__label'>{ props.label }</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './Chart.css';\r\nimport ChartBar from './ChartBar';\r\n\r\nexport default function Chart(props) {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n    return (\r\n        <div className='chart'>\r\n            {\r\n                props.dataPoints.map(dataPoint => \r\n                    <ChartBar \r\n                        value={dataPoint.value} \r\n                        maxValue={totalMaximum} \r\n                        label={dataPoint.label} \r\n                        key={dataPoint.label}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value:'0'},\r\n        {label: 'Feb', value:'0'},\r\n        {label: 'Mar', value:'0'},\r\n        {label: 'Apr', value:'0'},\r\n        {label: 'May', value:'0'},\r\n        {label: 'Jun', value:'0'},\r\n        {label: 'Jul', value:'0'},\r\n        {label: 'Aug', value:'0'},\r\n        {label: 'Sep', value:'0'},\r\n        {label: 'Oct', value:'0'},\r\n        {label: 'Nov', value:'0'},\r\n        {label: 'Dec', value:'0'},\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth(); //starting from 0 => month = January\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints} />\r\n}\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from 'react';\r\n\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nimport Card from '../UI/Card';\r\nimport './Expenses.css';\r\n\r\nexport default function Expenses(props) {\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n    const items = props.items;\r\n\r\n    const filteredExpenses = items.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n\r\n    const filterChangeHandler = (selectedYear) => {\r\n        setFilteredYear(selectedYear);\r\n    }; \r\n\r\n    return (\r\n        <Card className=\"expenses\">\r\n            <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n            <ExpensesChart expenses={filteredExpenses} />\r\n            <ExpensesList items={filteredExpenses} />\r\n            {/* {filteredExpenses.length === 0 ? <p className='no-expenses-found'>No expenses found</p> : allExpenses} */}\r\n            {/* another useful way : */}\r\n            {/* {filteredExpenses.length === 0 && <p className='no-expenses-found'>No expenses found</p>}\r\n            {filteredExpenses.length > 0 && allExpenses} */}\r\n        </Card>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\nexport default function ExpenseForm(props) {\r\n    const [enteredTitle,  setEnteredTitle]  = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate,   setEnteredDate]   = useState('');\r\n    \r\n    // Use this for single-state approach:\r\n    // const [userInput, setUserInput] = useState({\r\n    //     enteredTitle: '',\r\n    //     enteredAmount: '',\r\n    //     enteredDate: ''\r\n    // });\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n        // Use this for single-state approach:\r\n        // setUserInput((prevState) => {\r\n        //     return { ...prevState, enteredTitle: event.target.value };\r\n        // });\r\n    };\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n        // Use this for single-state approach:\r\n        // setUserInput((prevState) => {\r\n        //     return { ...prevState, enteredAmount: event.target.value };\r\n        // });\r\n    };\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n        // Use this for single-state approach:\r\n        // setUserInput((prevState) => {\r\n        //     return { ...prevState, enteredDate: event.target.value };\r\n        // });\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate),\r\n        };\r\n        console.log(expenseData);\r\n        props.onSaveExpenseData(expenseData);\r\n\r\n        // empty screen after submission\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport Card from '../UI/Card';\r\n\r\nexport default function NewExpense(props) {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            // adding an id to the new data object \r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    }\r\n\r\n    const stoptEditingHandler = () => {\r\n        setIsEditing(false);\r\n    }\r\n\r\n    return (\r\n        <Card className=\"new-expense\">\r\n            {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n            {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stoptEditingHandler} />}\r\n        </Card>\r\n    )\r\n}","import React, { useState } from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst dummy_data_expenses = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2022, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2022, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(dummy_data_expenses);\n\n  // Alternative code (old way):\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Expenses App\"),\n  //   React.createElement(Expenses, {items: expenses})\n  // );\n\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });  \n  }\n\n  // JSX alternative :\n  return (\n    <div>\n      <h2 className='app-h2'>Expenses App</h2>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}