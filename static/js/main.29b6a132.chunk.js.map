{"version":3,"sources":["components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","props","className","onChange","event","onChangeFilter","target","value","selected","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","useState","title","setTitle","amount","onClick","console","log","ExpensesList","items","length","map","item","id","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","expense","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","max","NewExpense","enteredExpenseData","Math","random","onAddExpense","dummy_data_expenses","App","expenses","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29b6a132.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ExpensesFilter.css';\r\n\r\nexport default function ExpensesFilter (props){\r\n  \r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select onChange={dropdownChangeHandler} value={props.selected}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import './ExpenseDate.css';\r\n\r\nexport default function ExpenseDate(props) {\r\n    const month = props.date.toLocaleString('en-US', {month: 'long'}),\r\n            day = props.date.toLocaleString('en-US', {day: '2-digit'}),\r\n           year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nexport default function Card(props) {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}","import React, { useState } from 'react';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nexport default function ExpenseItem(props) {\r\n    const [title, setTitle] = useState(props.title);\r\n\r\n    const clickHandler = () => {\r\n        setTitle('Updated !!');\r\n        console.log(title);\r\n    }\r\n\r\n    return (\r\n        <li>\r\n            <Card className=\"expense-item\">\r\n                <ExpenseDate date={props.date}/>\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{title}</h2>\r\n                    <div className=\"expense-item__price\">${props.amount}</div>\r\n                    <button onClick={clickHandler}>Click Test</button>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    )\r\n}","import React from 'react'\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nexport default function ExpensesList(props) {\r\n\r\n    if (props.items.length === 0){\r\n        return <h2 className='expenses-list__fallback'>Found no expenses</h2>\r\n    }\r\n\r\n    return (\r\n        <ul className='expenses-list'>\r\n            {props.items.map((item) => (\r\n                <ExpenseItem title={item.title} amount={item.amount} date={item.date} key={item.id}/>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\n\r\nimport Card from '../UI/Card';\r\nimport './Expenses.css';\r\n\r\nexport default function Expenses(props) {\r\n    const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n    const items = props.items;\r\n\r\n    const filteredExpenses = items.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n\r\n    const filterChangeHandler = (selectedYear) => {\r\n        setFilteredYear(selectedYear);\r\n    }; \r\n\r\n    return (\r\n        <Card className=\"expenses\">\r\n            <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n            <ExpensesList items={filteredExpenses} />\r\n            {/* {filteredExpenses.length === 0 ? <p className='no-expenses-found'>No expenses found</p> : allExpenses} */}\r\n            {/* another useful way : */}\r\n            {/* {filteredExpenses.length === 0 && <p className='no-expenses-found'>No expenses found</p>}\r\n            {filteredExpenses.length > 0 && allExpenses} */}\r\n        </Card>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\nexport default function ExpenseForm(props) {\r\n    const [enteredTitle,  setEnteredTitle]  = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate,   setEnteredDate]   = useState('');\r\n    \r\n    // Use this for single-state approach:\r\n    // const [userInput, setUserInput] = useState({\r\n    //     enteredTitle: '',\r\n    //     enteredAmount: '',\r\n    //     enteredDate: ''\r\n    // });\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n        // Use this for single-state approach:\r\n        // setUserInput((prevState) => {\r\n        //     return { ...prevState, enteredTitle: event.target.value };\r\n        // });\r\n    };\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n        // Use this for single-state approach:\r\n        // setUserInput((prevState) => {\r\n        //     return { ...prevState, enteredAmount: event.target.value };\r\n        // });\r\n    };\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n        // Use this for single-state approach:\r\n        // setUserInput((prevState) => {\r\n        //     return { ...prevState, enteredDate: event.target.value };\r\n        // });\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate),\r\n        };\r\n        console.log(expenseData);\r\n        props.onSaveExpenseData(expenseData);\r\n\r\n        // empty screen after submission\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport Card from '../UI/Card';\r\n\r\nexport default function NewExpense(props) {\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            // adding an id to the new data object \r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n    };\r\n\r\n\r\n    return (\r\n        <Card className=\"new-expense\">\r\n            <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\r\n        </Card>\r\n    )\r\n}","import React, { useState } from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst dummy_data_expenses = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(dummy_data_expenses);\n\n  // Alternative code (old way):\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Expenses App\"),\n  //   React.createElement(Expenses, {items: expenses})\n  // );\n\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });  \n  }\n\n  // JSX alternative :\n  return (\n    <div>\n      <h2 className='app-h2'>Expenses App</h2>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}